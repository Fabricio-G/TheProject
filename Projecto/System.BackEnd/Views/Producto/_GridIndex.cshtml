@model IEnumerable<System.Services.Models.ProductoViewModel>
@{
    var Email = User.Claims.FirstOrDefault(x => x.Type == "Usuario").Value;
    var edit = Html.ColumnTablePermission("Edit", "Productos", Email);
    var delete = Html.ColumnTablePermission("Delete", "Productos", Email);
}
@(Html.Grid(Model)
        .Build(columns =>
        {
            columns.Add(m => m.ProductoId).Titled("N°");
            columns.Add(m => m.Nombre).Titled("Nombre");
            columns.Add(m => m.Estado == "0" ? "SIN STOCK" : "EN STOCK").Titled("Estado");
            columns.Add(m => m.BreveDescripcion).Titled("Breve Descripcion");
            columns.Add(m => "$" + m.Precio).Titled("Precio");
            columns.Add(m => Html.ActionLink("", "Edit", "Producto", new { Id = m.ProductoId }, new { @class = "zmdi zmdi-edit text-warning", @title = "Editar" })).Css("action-cell " + edit).Titled("Editar");
            columns.Add(m => Html.ActionLink("", "Delete", "Producto", new { Id = m.ProductoId }, new { @class = "zmdi zmdi-delete text-danger swal-delete", @title = "Eliminar" })).Css("action-cell " + delete).Titled("Eliminar");
        })
        .Empty("No se encontró ningún registro")
        .Css("table table-hover")
        .Pageable(pager =>
        {
            pager.PagesToDisplay = 3;
            pager.CurrentPage = 10;
            pager.RowsPerPage = 10;
        })
)